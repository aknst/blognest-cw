// This file is auto-generated by @hey-api/openapi-ts

export const TagDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        text: {
            type: 'string'
        }
    }
} as const;

export const UpdatePostRequestSchema = {
    type: 'object',
    properties: {
        title: {
            type: 'string'
        },
        content: {
            type: 'string'
        },
        brief: {
            type: 'string'
        },
        coverFileId: {
            type: 'string',
            format: 'uuid'
        },
        tags: {
            uniqueItems: true,
            type: 'array',
            items: {
                '$ref': '#/components/schemas/TagDTO'
            }
        }
    }
} as const;

export const PostDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            format: 'int64'
        },
        title: {
            type: 'string'
        },
        content: {
            type: 'string'
        },
        brief: {
            type: 'string'
        },
        coverFileId: {
            type: 'string',
            format: 'uuid'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        author: {
            '$ref': '#/components/schemas/UserSummaryDTO'
        },
        tags: {
            uniqueItems: true,
            type: 'array',
            items: {
                '$ref': '#/components/schemas/TagDTO'
            }
        }
    }
} as const;

export const UserSummaryDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            format: 'int64'
        },
        name: {
            type: 'string'
        },
        username: {
            type: 'string'
        },
        blogId: {
            type: 'string',
            format: 'uuid'
        },
        avatarFileId: {
            type: 'string',
            format: 'uuid'
        }
    }
} as const;

export const UpdateBlogRequestSchema = {
    required: ['description', 'title'],
    type: 'object',
    properties: {
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        }
    }
} as const;

export const BlogDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        author: {
            '$ref': '#/components/schemas/UserSummaryDTO'
        }
    }
} as const;

export const UpdateUserRequestSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string'
        },
        username: {
            type: 'string'
        },
        avatarFileId: {
            type: 'string',
            format: 'uuid'
        }
    }
} as const;

export const RoleDTOSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string'
        }
    }
} as const;

export const UserDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            format: 'int64'
        },
        username: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        blogId: {
            type: 'string',
            format: 'uuid'
        },
        avatarFileId: {
            type: 'string',
            format: 'uuid'
        },
        roles: {
            uniqueItems: true,
            type: 'array',
            items: {
                '$ref': '#/components/schemas/RoleDTO'
            }
        }
    }
} as const;

export const SignUpRequestSchema = {
    required: ['name', 'password', 'username'],
    type: 'object',
    properties: {
        username: {
            type: 'string',
            example: 'user3'
        },
        password: {
            type: 'string',
            example: 'user3'
        },
        name: {
            type: 'string',
            example: 'User3'
        },
        email: {
            type: 'string',
            example: 'user3@mycompany.com'
        }
    }
} as const;

export const AuthResponseSchema = {
    type: 'object',
    properties: {
        accessToken: {
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/UserDTO'
        }
    }
} as const;

export const LoginRequestSchema = {
    required: ['password', 'username'],
    type: 'object',
    properties: {
        username: {
            type: 'string',
            example: 'user'
        },
        password: {
            type: 'string',
            example: 'user'
        }
    }
} as const;

export const ImageDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        }
    }
} as const;

export const PostSummaryDTOSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            format: 'int64'
        },
        title: {
            type: 'string'
        },
        brief: {
            type: 'string'
        },
        coverFileId: {
            type: 'string',
            format: 'uuid'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        author: {
            '$ref': '#/components/schemas/UserSummaryDTO'
        },
        tags: {
            uniqueItems: true,
            type: 'array',
            items: {
                '$ref': '#/components/schemas/TagDTO'
            }
        }
    }
} as const;

export const PostsResponseSchema = {
    type: 'object',
    properties: {
        content: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/PostSummaryDTO'
            }
        },
        pageNo: {
            type: 'integer',
            format: 'int32'
        },
        pageSize: {
            type: 'integer',
            format: 'int32'
        },
        totalElements: {
            type: 'integer',
            format: 'int64'
        },
        totalPages: {
            type: 'integer',
            format: 'int32'
        },
        last: {
            type: 'boolean'
        }
    }
} as const;

export const BlogsResponseSchema = {
    type: 'object',
    properties: {
        content: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/BlogDTO'
            }
        },
        pageNo: {
            type: 'integer',
            format: 'int32'
        },
        pageSize: {
            type: 'integer',
            format: 'int32'
        },
        totalElements: {
            type: 'integer',
            format: 'int64'
        },
        totalPages: {
            type: 'integer',
            format: 'int32'
        },
        last: {
            type: 'boolean'
        }
    }
} as const;